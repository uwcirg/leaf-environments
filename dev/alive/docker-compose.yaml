version: "3"
services:
  alive-mssql:
    extends:
      file: ../common-services.yaml
      service: mssql
    volumes:
      - leaf-alive-mssql:/var/opt/mssql

  alive-coreapi:
    extends:
      file: ../common-services.yaml
      service: coreapi
    volumes:
      - ../alive/keys:/.keys:ro
      - ../alive/appsettings.json:/app/API/appsettings.json:ro
    environment:
      LEAF_JWT_KEY_PW: ${ALIVE_JWT_KEY_PW}
      LEAF_APP_DB: Server=alive-mssql,1433;Database=LeafDB;uid=sa;Password=${MSSQL_SA_PASSWORD}
      LEAF_CLIN_DB: Server=clin-db,3306;Database=alive;uid=db-user;Password=${MYSQL_PASSWORD}
    labels:
      - traefik.http.routers.alive-coreapi-${COMPOSE_PROJECT_NAME}.rule=Host(`alive.${LEAF_DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.routers.alive-coreapi-${COMPOSE_PROJECT_NAME}.entrypoints=websecure
      - traefik.http.routers.alive-coreapi-${COMPOSE_PROJECT_NAME}.tls=true
      - traefik.http.routers.alive-coreapi-${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt

      # TODO remove after auth implemented via oauth2-proxy
      # only allow access from localhost and CIRG IP ranges
      - traefik.http.routers.alive-coreapi-${COMPOSE_PROJECT_NAME}.middlewares=limit-access-to-cirg-dc-cidr
  node:
    labels:
      - traefik.enable=true
      - traefik.http.routers.alive-node-${COMPOSE_PROJECT_NAME}.rule=Host(`alive.${LEAF_DOMAIN}`)
      - traefik.http.routers.alive-node-${COMPOSE_PROJECT_NAME}.entrypoints=websecure
      - traefik.http.routers.alive-node-${COMPOSE_PROJECT_NAME}.tls=true
      - traefik.http.routers.alive-node-${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt

      # TODO remove after auth implemented via oauth2-proxy
      # only allow access from localhost and CIRG IP ranges
      - traefik.http.routers.alive-node-${COMPOSE_PROJECT_NAME}.middlewares=limit-access-to-cirg-dc-cidr
volumes:
  leaf-alive-mssql:
